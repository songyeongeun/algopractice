#include <bits/stdc++.h>
using namespace std;

int main()
{
    bool tag = false; // 태그 내부 판단
    stack<char> word; // 단어 뒤집기 위해
    string s;
    getline(cin, s); // 문자열 입력 받을때 공백도 포함

    int sLen = s.length();
    for (int i = 0; i < sLen; i++) // 문자열의 글자 하나씩 반복
    {
        if (s[i] == '<') // 태그 내부
        {
            while (!word.empty()) // 스택에 저장된 모든 문자들을 출력하고 스택 pop으로 비움
            {
                cout << word.top();
                word.pop();
            }
            cout << s[i]; // < 출력
            tag = true;   // 태그 내부인 것을 나타내기 위해 true로 함
        }
        else if (s[i] == '>') // 태그 외부
        {
            cout << s[i];      //  > 출력
            tag = false;       // 태그 외부 나타냄
            if (i == sLen - 1) // 문자열의 마지막 부분
            {
                cout << '\n'; // 결과 다음 줄에 출력하기 위해
            }
        }
        else // 그냥 문자
        {
            if (tag) // 태그의 값이 TURE일때 -> 내부일때
            {
                cout << s[i]; // 문자 그대로 출력
            }
            else // 태그 외부
            {
                if (s[i] == ' ' || i == sLen - 1) // 공백문자 or 문자열 마지막
                {
                    if (i == sLen - 1) // 마지막
                    {
                        cout << s[i]; // 걍 출력
                    }
                    while (!word.empty()) // 스택에 있는 모든 문자 출력하고 비움
                    {
                        cout << word.top();
                        word.pop();
                    }
                    if (i == sLen - 1) // 문자열 마지막이면
                    {
                        cout << '\n'; // 결과 다음줄에 출력하기 위해
                    }
                    else // 문자열 중간에 공백이면
                    {
                        cout << ' '; // 단어 사이 구분
                    }
                }
                else // 그냥 문자면
                {
                    word.push(s[i]); // 스택에 문자 저장 -> 단어뒤집기 준비
                }
            }
        }
    }
    return 0;
}
